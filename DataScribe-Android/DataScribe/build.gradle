plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.app.common'
    compileSdk 33

    defaultConfig {
        applicationId "com.app.common"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig = true
    }

    flavorDimensions "version"

    def APP_BASE_URL = "APP_BASE_URL"
    def APP_WEBSITE_URL = "APP_WEBSITE_URL"

    productFlavors {
        beta {
            buildConfigField "String", APP_BASE_URL, '"https://api.com/"'
            buildConfigField "String", APP_WEBSITE_URL, '"https://website.com"'
        }
        prod {
            /*dimension "prod"
            manifestPlaceholders variant: 'Prod'
            applicationIdSuffix ".prod"*/
            buildConfigField "String", APP_BASE_URL, '"https://api.com/"'
            buildConfigField "String", APP_WEBSITE_URL, '"https://website.com"'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }
    kotlinOptions {
        //jvmTarget = '1.8'
        jvmTarget = '17'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    // Add this block and enable/disable the parameters as follows
    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation "androidx.multidex:multidex:2.0.1"

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def okhttp_version = "4.9.3"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    def hilt_version="2.42"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    def lifecycle_version = "2.5.0-beta01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    def coroutines_version = "1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    def navigation_version = "2.5.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Coroutine Image Loader coil
    implementation("io.coil-kt:coil:0.9.1")

    def camerax_version = "1.2.0-rc01"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"

    // Barcode scanning API
    implementation 'androidx.camera:camera-mlkit-vision:1.2.0-beta02'
    implementation 'com.google.mlkit:barcode-scanning:17.0.3'

    implementation group: 'com.google.zxing', name: 'core', version: '3.3.3'

    //implementation "androidx.security:security-crypto:1.1.0-alpha03"
    implementation "androidx.security:security-crypto:1.0.0-alpha02"

    //implementation "com.airbnb.android:lottie:3.0.3-support"
    implementation 'com.airbnb.android:lottie:6.0.0'

    implementation "joda-time:joda-time:2.10.9"

    // Custom Chrome Tabs
    implementation "androidx.browser:browser:1.3.0"
}